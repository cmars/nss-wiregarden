name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CARGO_TERM_COLOR: always

jobs:
  stable-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

    - name: Get package version
      shell: bash
      run: echo "##[set-output name=version;]$(awk -F'=' '/version/ {print $2}' Cargo.toml | sed 's/\"//g;s/ //g')"
      id: extract_version
    - name: Get time of day
      shell: bash
      run: echo "##[set-output name=time;]$(date +%s)"
      id: extract_time

    - name: Install cargo-deb
      run: cargo install cargo-deb
    - name: Build deb package
      run: cargo deb --verbose --deb-version "${{ steps.extract_version.outputs.version }}+${{ steps.extract_time.outputs.time }}"

    - name: Get deb filename
      shell: bash
      run: echo "##[set-output name=debfile;]$(basename ./target/debian/*.deb)"
      id: extract_debfile

    - uses: actions/upload-artifact@v2
      with:
        path: target/debian/${{ steps.extract_debfile.outputs.debfile }}
        name: ${{ steps.extract_debfile.outputs.debfile }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/debian/${{ steps.extract_debfile.outputs.debfile }}
        asset_name: ${{ steps.extract_debfile.outputs.debfile }}
        asset_content_type: application/octet-stream

    - name: Upload deb package to Bintray
      shell: bash
      run: curl -T ./target/debian/${{ steps.extract_debfile.outputs.debfile }} -ucmars232:${{ secrets.BINTRAY_API_KEY }} "https://api.bintray.com/content/wiregarden-io/stable/nss-wiregarden/${{ steps.extract_version.outputs.version }}+${{ steps.extract_time.outputs.time }}/pool/l/${{ steps.extract_debfile.outputs.debfile }};deb_distribution=xenial,bionic,focal;deb_component=main;deb_architecture=amd64;publish=1;override=1"
